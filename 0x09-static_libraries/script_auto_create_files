#!/bin/bash

# Read function declarations from main.h and create empty function files
while read -r line; do
    # Extract function name and arguments from declaration
    name=$(echo "$line" | awk '{print $2}' | cut -d'(' -f1) # Extracts the function name from the declaration
    args=$(echo "$line" | awk '{print substr($0, index($0,$2))}' | sed 's/)//') # Extracts the function arguments from the declaration

    # Create empty function file with correct prototype and function comment
    filename=$(echo "$name" | sed 's/^\*//') # Removes the asterisk (*) from the function name to use as the filename
    echo -e "#include \"main.h\"\n" > "$filename.c"
    echo "/**" >> "$filename.c"
    echo " * $filename - short description" >> "$filename.c"
    # Loops through each argument in the function declaration and creates a comment for it
        IFS=',' read -r -a arg_list <<< "$args"
    for arg in "${arg_list[@]}"; do
        arg_name=$(echo "$arg" | awk '{print $2}')
        echo " * @$arg_name: input" >> "$filename.c"
    done
    echo " * Return: returns ." >> "$filename.c"
    echo " */" >> "$filename.c"
    echo "$line" >> "$filename.c"
    echo "{" >> "$filename.c"
    echo "    /* TODO: Implement $name function */" >> "$filename.c"
    echo "}" >> "$filename.c"
done < "main.h"

